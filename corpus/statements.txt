===
if 1
===

if ($true) {}

---

(script
  (script_block
    (statement (if (boolean_value) (statement_block)))))

===
if 2
===

if ($true) { $a }

---

(script
  (script_block
    (statement
      (if (boolean_value)
        (statement_block (statement (user_variable)))))))

===
if else
===

if ($true) { $a } else {}

---

(script
  (script_block
    (statement
      (if (boolean_value)
        (statement_block (statement (user_variable)))
      (else (statement_block))))))

===
while 1
===

while ($true) { $a }

---

(script
  (script_block
    (statement
      (while (boolean_value) (statement_block (statement (user_variable)))))))

===
do while
===

do { $a } while ($true)

---

(script
  (script_block
    (statement
      (do (statement_block (statement (user_variable)))
        (boolean_value)))))

===
do until
===

do { $a } until ($true)

---

(script
  (script_block
    (statement
      (do (statement_block (statement (user_variable)))
        (boolean_value)))))

===
for 1
===

for (
  $a
  $b
  $c
)
{
  $a
}

---

(script
  (script_block
    (statement
      (for
        (statement (user_variable))
        (statement (user_variable))
        (statement (user_variable))
        (statement_block (statement (user_variable)))))))

===
for w/ semicolons
===

for ( $a; $b; $c)
{
  $a
}

---

(script
  (script_block
    (statement
      (for
        (statement (user_variable)) (statement_terminator)
        (statement (user_variable)) (statement_terminator)
        (statement (user_variable))
        (statement_block (statement (user_variable)))))))

===
for 2
===

for (
  $a
  $b
)
{
  $a
}

---

(script
  (script_block
    (statement
      (for
        (statement (user_variable))
        (statement (user_variable))
        (statement_block (statement (user_variable)))))))

===
for 3
===

for (
  $a
)
{
  $a
}

---

(script
  (script_block
    (statement
      (for
        (statement (user_variable))
        (statement_block (statement (user_variable)))))))

===
foreach
===

foreach ($a in $b) {
  $true
}

---

(script
  (script_block
    (statement
      (foreach (user_variable) (user_variable)
        (statement_block (statement (boolean_value)))))))

===
try catch finally (from spec 3.0)
===

try
	{
		# $a[$i] = 10
		"Assignment completed without error"
		# break
	}
	catch [IndexOutOfRangeException]
	{
		# "Handling out-of-bounds index, >$_<`n"
		$i # = 5
	}
	catch
	{
		"Caught unexpected exception"
	}
	finally
	{
 		# â€¦
	}

---

(script
  (script_block
    (statement
      (try (statement_block (comment) (statement (string)) (comment))
        (catch (attribute (identifier)) (statement_block (comment) (statement (user_variable)) (comment)))
        (catch (statement_block (statement (string))))
        (finally (statement_block (comment)))))))

===
break
===

if ($true) {
  $a
  break james
}

if ($true) {
  $a
  continue james
}
---


(script
  (script_block
    (statement
      (if (boolean_value)
        (statement_block
          (statement (user_variable))
          (statement (flow_control_statement (flow_break_continue (identifier)))))))
    (statement
      (if (boolean_value)
        (statement_block
          (statement (user_variable))
          (statement (flow_control_statement (flow_break_continue (identifier)))))))))
